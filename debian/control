Source: dart
Maintainer: Debian Science Maintainers <debian-science-maintainers@lists.alioth.debian.org>
Uploaders: Jose Luis Rivero <jrivero@osrfoundation.org>
Section: science
Priority: optional
Build-Depends: debhelper-compat (= 13),
               cmake,
               libeigen3-dev,
               libccd-dev,
               libfcl-dev,
               libbullet-dev,
               libode-dev,
               libassimp-dev,
               libnlopt-cxx-dev,
               coinor-libipopt-dev,
               freeglut3-dev,
               libxi-dev,
               libxmu-dev,
               libflann-dev,
               libtinyxml-dev,
               libtinyxml2-dev,
               liburdfdom-dev,
               libboost-dev,
               libboost-filesystem-dev,
               libboost-system-dev,
               libboost-regex-dev,
               liboctomap-dev,
               libopenthreads-dev,
               libopenscenegraph-dev,
               jdupes
Standards-Version: 4.5.1
Rules-Requires-Root: no
Vcs-Browser: https://salsa.debian.org/science-team/dart
Vcs-Git: https://salsa.debian.org/science-team/dart.git
Homepage: http://dartsim.github.io/

Package: libdart-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         libdart6 (= ${binary:Version}),
         libeigen3-dev,
         libassimp-dev,
         libfcl-dev,
         libbullet-dev,
         libboost-all-dev,
         libdart-external-odelcpsolver-dev,
Pre-Depends: ${misc:Pre-Depends}
Description: Kinematics Dynamics and Optimization Library - development files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains main headers and other tools for development.

Package: libkido-dev
Architecture: all
Section: oldlibs
Depends: libdart-dev,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart6
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${misc:Depends},
         ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: Kinematics Dynamics and Optimization Library - main library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the main library of DART.

Package: libkido0
Architecture: all
Section: oldlibs
Depends: libdart6,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart-collision-bullet6
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${shlibs:Depends},
         ${misc:Depends}
Pre-Depends: ${misc:Pre-Depends}
Breaks: libdart6-collision-bullet (<< 6.9.5-1)
Replaces: libdart6-collision-bullet (<< 6.9.5-1)
Description: Dynamic Animation and Robotics Toolkit - Bullet Collision Library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the collision library with Bullet backend.

Package: libdart-collision-bullet-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         libdart-dev,
         libdart-collision-bullet6 (= ${binary:Version}),
         libbullet-dev
Pre-Depends: ${misc:Pre-Depends}
Description: Dynamic Animation and Robotics Toolkit - Bullet Collision Dev
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart-collision-ode6
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${shlibs:Depends},
         ${misc:Depends}
Pre-Depends: ${misc:Pre-Depends}
Breaks: libdart6-collision-ode (<< 6.9.5-1)
Replaces: libdart6-collision-ode (<< 6.9.5-1)
Description: Dynamic Animation and Robotics Toolkit - ODE Collision Library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the collision library with ODE backend.

Package: libdart-collision-ode-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         libdart-dev,
         libdart-collision-ode6 (= ${binary:Version}),
         libode-dev
Pre-Depends: ${misc:Pre-Depends}
Description: Dynamic Animation and Robotics Toolkit - ODE Collision Dev
 DART is a collaborative, cross-platform, open source library created by
 the Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library
 provides data structures and algorithms for kinematic and dynamic
 applications in robotics and computer animation. DART is distinguished
 by it's accuracy and stability due to its use of generalized coordinates
 to represent articulated rigid body systems and computation of
 Lagrange's equations derived from D.Alembert's principle to describe the
 dynamics of motion. For developers, in contrast to many popular physics
 engines which view the simulator as a black box, DART gives full access
 to internal kinematic and dynamic quantities, such as the mass matrix,
 Coriolis and centrifugal forces, transformation matrices and their
 derivatives. DART also provides efficient computation of Jacobian
 matrices for arbitrary body points and coordinate frames. Contact and
 collision are handled using an implicit time-stepping, velocity-based
 LCP (linear-complementarity problem) to guarantee non-penetration,
 directional friction, and approximated Coulomb friction cone conditions.
 For collision detection, DART uses FCL developed by Willow Garage and
 the UNC Gamma Lab. DART has applications in robotics and computer
 animation because it features a multibody dynamic simulator and tools
 for control and motion planning. Multibody dynamic simulation in DART is
 an extension of RTQL8, an open source software created by the Georgia
 Tech Graphics Lab. This package contains the collision ode headers and
 other tools for development.

Package: libdart-planning-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         libdart-dev,
         libdart-planning6 (= ${binary:Version}),
         libflann-dev
Pre-Depends: ${misc:Pre-Depends}
Description: Kinematics Dynamics and Optimization Library - planning dev files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the planning headers and other tools for development.

Package: libkido-planning-dev
Architecture: all
Section: oldlibs
Depends: libdart-planning-dev,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart-planning6
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${misc:Depends},
         ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Breaks: libdart6-planning (<< 6.9.5-1)
Replaces: libdart6-planning (<< 6.9.5-1)
Description: Kinematics Dynamics and Optimization Library - planning library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the DART planning library.

Package: libkido-planning0
Architecture: all
Section: oldlibs
Depends: libdart-planning6,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart-utils-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         libdart-dev,
         libdart-utils6 (= ${binary:Version}),
         libtinyxml-dev,
         libtinyxml2-dev,
         liburdfdom-dev
Pre-Depends: ${misc:Pre-Depends}
Description: Kinematics Dynamics and Optimization Library - utils dev files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains headers and other useful tools for development.

Package: libkido-utils-dev
Architecture: all
Section: oldlibs
Depends: libdart-utils-dev,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart-utils6
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${misc:Depends},
         ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Breaks: libdart6-utils (<< 6.9.5-1)
Replaces: libdart6-utils (<< 6.9.5-1)
Description: Kinematics Dynamics and Optimization Library - utils library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the DART utils library.

Package: libkido-utils0
Architecture: all
Section: oldlibs
Depends: libdart-utils6,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart-utils-urdf6
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${shlibs:Depends},
         ${misc:Depends}
Pre-Depends: ${misc:Pre-Depends}
Breaks: libdart6-utils-urdf (<< 6.9.5-1)
Replaces: libdart6-utils-urdf (<< 6.9.5-1)
Description: Dynamic Animation and Robotics Toolkit - Utils URDF Library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the Utils URDF library.

Package: libdart-utils-urdf-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         libdart-dev,
         libdart-utils-dev,
         libdart-utils-urdf6 (= ${binary:Version}),
         liburdfdom-dev
Pre-Depends: ${misc:Pre-Depends}
Description: Dynamic Animation and Robotics Toolkit - URDF Component Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains urdf utils headers and other useful tools for
 development.

Package: libdart-gui-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         libdart-dev,
         libdart-utils-dev,
         libdart-gui6 (= ${binary:Version}),
         freeglut3-dev,
         libxi-dev,
         libxmu-dev
Pre-Depends: ${misc:Pre-Depends}
Description: Kinematics Dynamics and Optimization Library - gui dev files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains GUI headers and other useful tools for GUI development.

Package: libkido-gui-dev
Architecture: all
Section: oldlibs
Depends: libdart-gui-dev,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart-gui6
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${misc:Depends},
         ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Breaks: libdart6-gui (<< 6.9.5-1)
Replaces: libdart6-gui (<< 6.9.5-1)
Description: Kinematics Dynamics and Optimization Library - gui library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the GUI library.

Package: libkido-gui0
Architecture: all
Section: oldlibs
Depends: libdart-gui6,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart-gui-osg-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         libdart-gui-dev,
         libdart-gui-osg6 (= ${binary:Version}),
         libopenthreads-dev,
         libopenscenegraph-dev
Pre-Depends: ${misc:Pre-Depends}
Description: Kinematics Dynamics and Optimization Library - gui-osg dev files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains GUI OpenSceneGraph headers and other useful tools for
 GUI OpenSceneGraph development.

Package: libkido-gui-osg-dev
Architecture: all
Section: oldlibs
Depends: libdart-gui-osg-dev,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart-gui-osg6
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${misc:Depends},
         ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Breaks: libdart6-gui-osg (<< 6.9.5-1)
Replaces: libdart6-gui-osg (<< 6.9.5-1)
Description: Kinematics Dynamics and Optimization Library - gui-osg library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the GUI OpenSceneGraph optimizer library.

Package: libkido-gui-osg0
Architecture: all
Section: oldlibs
Depends: libdart-gui-osg6,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart-optimizer-nlopt-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         libdart-dev,
         libdart-optimizer-nlopt6 (= ${binary:Version}),
         libnlopt-cxx-dev
Pre-Depends: ${misc:Pre-Depends}
Description: Kinematics Dynamics and Optimization Library - nlopt optimizer dev
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains NLOPT optimizer headers and other useful tools for
 development.

Package: libkido-optimizer-nlopt-dev
Architecture: all
Section: oldlibs
Depends: libdart-optimizer-nlopt-dev,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart-optimizer-nlopt6
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${misc:Depends},
         ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Breaks: libdart6-optimizer-nlopt (<< 6.9.5-1)
Replaces: libdart6-optimizer-nlopt (<< 6.9.5-1)
Description: Kinematics Dynamics and Optimization Library - nlopt optimizer lib
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the NLOPT optimizer library.

Package: libkido-optimizer-nlopt0
Architecture: all
Section: oldlibs
Depends: libdart-optimizer-nlopt6,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart-optimizer-ipopt-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         libdart-dev,
         libdart-optimizer-ipopt6 (= ${binary:Version}),
         coinor-libipopt-dev
Pre-Depends: ${misc:Pre-Depends}
Description: Kinematics Dynamics and Optimization Library - ipopt optimizer dev
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains IPOPT optimizer headers and other useful tools for
 development.

Package: libkido-optimizer-ipopt-dev
Architecture: all
Section: oldlibs
Depends: libdart-optimizer-ipopt-dev,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart-optimizer-ipopt6
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${misc:Depends},
         ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Breaks: libdart6-optimizer-ipopt (<< 6.9.5-1)
Replaces: libdart6-optimizer-ipopt (<< 6.9.5-1)
Description: Kinematics Dynamics and Optimization Library - ipopt optimizer lib
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the ipopt optimizer library.

Package: libkido-optimizer-ipopt0
Architecture: all
Section: oldlibs
Depends: libdart-optimizer-ipopt6,
         ${misc:Depends}
Description: transitional package
 This is a transitional package. It can safely be removed.

Package: libdart-external-ikfast-dev
Architecture: any
Section: libdevel
Multi-Arch: same
Depends: ${misc:Depends},
         libdart-dev
Pre-Depends: ${misc:Pre-Depends}
Description: Kinematics Dynamics and Optimization Library - ikfast dev
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains ikfast headers and other useful tools for
 development.

Package: libdart-external-imgui-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         libdart-dev,
         libdart-external-imgui6 (= ${binary:Version})
Pre-Depends: ${misc:Pre-Depends}
Description: Kinematics Dynamics and Optimization Library - imgui dev
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains imgui headers and other useful tools for
 development.

Package: libdart-external-imgui6
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${misc:Depends},
         ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Breaks: libdart6-external-imgui (<< 6.9.5-1)
Replaces: libdart6-external-imgui (<< 6.9.5-1)
Description: Kinematics Dynamics and Optimization Library - imgui lib
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the imgui library.

Package: libdart-external-lodepng-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         libdart-dev,
         libdart-external-lodepng6 (= ${binary:Version})
Pre-Depends: ${misc:Pre-Depends}
Description: Kinematics Dynamics and Optimization Library - lodepng dev
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains lodepng headers and other useful tools for
 development.

Package: libdart-external-lodepng6
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${misc:Depends},
         ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Breaks: libdart6-external-lodepng (<< 6.9.5-1)
Replaces: libdart6-external-lodepng (<< 6.9.5-1)
Description: Kinematics Dynamics and Optimization Library - lodepng lib
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the lodepng library.

Package: libdart-external-odelcpsolver-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         libdart-external-odelcpsolver6 (= ${binary:Version})
Pre-Depends: ${misc:Pre-Depends}
Description: Kinematics Dynamics and Optimization Library - odelcpsolver dev
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains odelcpsolver headers and other useful tools for
 development.

Package: libdart-external-odelcpsolver6
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${misc:Depends},
         ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Breaks: libdart6-external-odelcpsolver (<< 6.9.5-1)
Replaces: libdart6-external-odelcpsolver (<< 6.9.5-1)
Description: Kinematics Dynamics and Optimization Library - odelcpsolver lib
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package contains the odelcpsolver library.

Package: libdart-all-dev
Architecture: any
Section: libdevel
Multi-Arch: same
Depends: ${misc:Depends},
         libdart-dev,
         libdart-planning-dev,
         libdart-utils-dev,
         libdart-utils-urdf-dev,
         libdart-gui-dev,
         libdart-gui-osg-dev,
         libdart-optimizer-nlopt-dev,
         libdart-optimizer-ipopt-dev,
         libdart-collision-bullet-dev,
         libdart-collision-ode-dev
Pre-Depends: ${misc:Pre-Depends}
Description: Dynamic Animation and Robotics Toolkit - All Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 This package does not contain any file but install all development packages
 .
 Metapackage for all development files

Package: dart-doc
Architecture: all
Multi-Arch: foreign
Section: doc
Depends: ${misc:Depends}
Description: Dynamic Animation and Robotics Toolkit - Documentation
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 .
 This package contains documentation, tutorials and examples
