Source: kido
Maintainer: Debian Science Maintainers <debian-science-maintainers@lists.alioth.debian.org>
Uploaders: Jose Luis Rivero <jrivero@osrfoundation.org>
Section: science
Testsuite: autopkgtest
Priority: optional
Build-Depends: debhelper (>= 9),
               cmake,
               libeigen3-dev,
               libfcl-dev (>= 0.2.7),
               libbullet-dev,
               libassimp-dev (>= 3),
               libnlopt-dev,
               coinor-libipopt-dev,
               freeglut3-dev,
               libxi-dev,
               libxmu-dev,
               libflann-dev (>= 1.8),
               libtinyxml-dev,
               libtinyxml2-dev,
               liburdfdom-dev,
               libboost-dev,
               libboost-system-dev,
               libboost-regex-dev,
               libopenthreads-dev,
               libopenscenegraph-dev
Standards-Version: 3.9.6
Vcs-Browser: https://anonscm.debian.org/cgit/debian-science/packages/kido.git
Vcs-Git: git://anonscm.debian.org/debian-science/packages/kido.git
Homepage: http://dartsim.github.io/

Package: libkido-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libkido0.1 (= ${binary:Version}),
         libeigen3-dev,
         libassimp-dev (>= 3),
         libfcl-dev,
         libbullet-dev,
         libboost-all-dev
Description: Kinematics Dynamics and Optimization Library - development files
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido0.1
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         ${shlibs:Depends}
Description: Kinematics Dynamics and Optimization Library - main library
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido0.1-dbg
Section: debug
Priority: extra
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: libkido0.1 (= ${binary:Version}),
         ${misc:Depends}
Description: Kinematics Dynamics and Optimization Library - debug symbols
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-planning-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libkido-dev,
         libkido-planning0.1 (= ${binary:Version}),
         libflann-dev
Description: Kinematics Dynamics and Optimization Library - planning dev files
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-planning0.1
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         ${shlibs:Depends}
Description: Kinematics Dynamics and Optimization Library - planning library
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-planning0.1-dbg
Section: debug
Priority: extra
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: libkido-planning0.1 (= ${binary:Version}),
         ${misc:Depends}
Description: Kinematics Dynamics and Optimization Library - planning lib debug
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-utils-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libkido-dev,
         libkido-utils0.1 (= ${binary:Version}),
         libtinyxml-dev,
         libtinyxml2-dev,
         liburdfdom-dev
Description: Kinematics Dynamics and Optimization Library - utils dev files
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-utils0.1
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         ${shlibs:Depends}
Description: Kinematics Dynamics and Optimization Library - utils library
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-utils0.1-dbg
Section: debug
Priority: extra
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: libkido-utils0.1 (= ${binary:Version}),
         ${misc:Depends}
Description: Kinematics Dynamics and Optimization Library - utils lib debug
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.


Package: libkido-gui-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libkido-dev,
         libkido-utils-dev,
         libkido-gui0.1 (= ${binary:Version}),
         freeglut3-dev,
         libxi-dev,
         libxmu-dev
Description: Kinematics Dynamics and Optimization Library - gui dev files
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-gui0.1
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         ${shlibs:Depends}
Description: Kinematics Dynamics and Optimization Library - gui library
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-gui0.1-dbg
Section: debug
Priority: extra
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: libkido-gui0.1 (= ${binary:Version}),
         ${misc:Depends}
Description: Kinematics Dynamics and Optimization Library - gui lib debug
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-gui-osg-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libkido-gui-dev,
         libkido-gui-osg0.1 (= ${binary:Version}),
         libopenthreads-dev,
         libopenscenegraph-dev
Description: Kinematics Dynamics and Optimization Library - gui-osg dev files
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-gui-osg0.1
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         ${shlibs:Depends}
Description: Kinematics Dynamics and Optimization Library - gui-osg library
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-gui-osg0.1-dbg
Section: debug
Priority: extra
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: libkido-gui-osg0.1 (= ${binary:Version}),
         ${misc:Depends}
Description: Kinematics Dynamics and Optimization Library - gui-osg lib debug
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.


Package: libkido-optimizer-nlopt-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libkido-dev,
         libkido-optimizer-nlopt0.1 (= ${binary:Version}),
         libnlopt-dev
Description: Kinematics Dynamics and Optimization Library - optimizer dev files
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-optimizer-nlopt0.1
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         ${shlibs:Depends}
Description: Kinematics Dynamics and Optimization Library - nlopt optimizer lib
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-optimizer-nlopt0.1-dbg
Section: debug
Priority: extra
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: libkido-optimizer-nlopt0.1 (= ${binary:Version}),
         ${misc:Depends}
Description: Kinematics Dynamics and Optimization Library - nlopt debug lib
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-optimizer-ipopt-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libkido-dev,
         libkido-optimizer-ipopt0.1 (= ${binary:Version}),
         coinor-libipopt-dev
Description: Kinematics Dynamics and Optimization Library - ipopt optimizer dev
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-optimizer-ipopt0.1
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         ${shlibs:Depends}
Description: Kinematics Dynamics and Optimization Library - ipopt optimizer lib
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libkido-optimizer-ipopt0.1-dbg
Section: debug
Priority: extra
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: libkido-optimizer-ipopt0.1 (= ${binary:Version}),
         ${misc:Depends}
Description: Kinematics Dynamics and Optimization Library - ipopt debug
 KIDO is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 KIDO is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, KIDO gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. KIDO also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, KIDO uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 KIDO has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in KIDO is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
